sauer_client

# Cube 2: Sauerbraten 0.0.20100728.dfsg, Ubuntu Linux 12.04, 32 bit
#
# Maintainer: Sebastian Parschauer <s.parschauer@gmx.de>
#
# works adapted with 0.0.20100728.dfsg
# works adapted with and without PIE + ASLR
# doesn't work with 0.0.20130203.dfsg, yet
#
# $ ugtrain -P examples/sauerbraten32
#
# Here we hook on dynamic memory (C++ constructor) -
# single FPSent object.

### Guided Automatic Adaption for your System ###
# $ ugtrain -A examples/sauerbraten32
#
# If automatic adaption fails, try to run the adaption
# script with debugging or otherwise do full discovery!
#
# $ examples/adapt/sauerbraten_adapt32.sh /usr/lib/games/sauerbraten/sauer_client DEBUG
#
# Please send the output to the following mailing list in this case:
# ugtrain-devel@lists.sourceforge.net

### Discovery ###
# $ ugtrain -D "2" -S examples/sauerbraten32
# $ ugtrain -D "4;0x0;0x0;<size>" -S examples/sauerbraten32
#
# The number of pistol ammo is easy to find in memory.
# See doc/ugtrain-statmem.txt and doc/ugtrain-dynmem.txt for details!

# Please read examples/README for the syntax description!

# The sauerbraten shell script executes sauer_client.
game_call sauerbraten
game_binpath /usr/lib/games/sauerbraten/sauer_client


dynmemstart FPSent 1376 0x81dc992 0x24

Health 0x15c i32 l 65535 1,0 a
MaxHealth 0x160 i32 l 65535 1,0 a
Armor 0x164 i32 l 65535 1,0 a
# 0: blue, 1: green, 2: yellow
ArmorType 0x168 i32 l 2 1,0 a

# 0=chainsaw, 1=shotgun, 2=chaingun, 3=rocketlauncher
# 4=rifle, 5=granadelauncher, 6=pistol
Ammo_0 0x178 i32 l 250 2,0 a
Ammo_1 0x17c i32 l 250 2,0 a
Ammo_2 0x180 i32 l 250 2,0 a
Ammo_3 0x184 i32 l 250 2,0 a
Ammo_4 0x188 i32 l 250 2,0 a
Ammo_5 0x18c i32 l 250 2,0 a
Ammo_6 0x190 i32 l 250 2,0 a

dynmemend


# Adaption
adapt_script adapt/sauerbraten_adapt32.sh
adapt_required 1


# real member names of struct fpsent from src/fpsgame/game.h:
# Health: struct fpsstate::health
# MaxHealth: struct fpsstate::maxhealth
# Armor: struct fpsstate::armour
# ArmorType: struct fpsstate::armourtype
# Ammo_0: struct fpsstate::ammo[GUN_FIRST]
# Ammo_1: struct fpsstate::ammo[GUN_SG]
# Ammo_2: struct fpsstate::ammo[GUN_CG]
# Ammo_3: struct fpsstate::ammo[GUN_RL]
# Ammo_4: struct fpsstate::ammo[GUN_RIFLE]
# Ammo_5: struct fpsstate::ammo[GUN_GL]
# Ammo_6: struct fpsstate::ammo[GUN_PISTOL]
